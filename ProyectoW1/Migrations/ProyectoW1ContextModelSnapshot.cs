// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProyectoW1.DBModels;
using System;

namespace ProyectoW1.Migrations
{
    [DbContext(typeof(ProyectoW1Context))]
    partial class ProyectoW1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoW1.DBModels.Calificacion", b =>
                {
                    b.Property<int>("Idcalifiacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCalifiacion");

                    b.Property<int?>("Calificacion1")
                        .HasColumnName("Calificacion");

                    b.Property<string>("Comentario")
                        .HasMaxLength(1500)
                        .IsUnicode(false);

                    b.Property<int?>("Idevento")
                        .HasColumnName("IDEvento");

                    b.Property<int?>("Idusuario")
                        .HasColumnName("IDUsuario");

                    b.HasKey("Idcalifiacion");

                    b.HasIndex("Idevento");

                    b.HasIndex("Idusuario");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Canton", b =>
                {
                    b.Property<int>("Idcanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCanton");

                    b.Property<int?>("CodCanton");

                    b.Property<int?>("Idprovicia")
                        .HasColumnName("IDProvicia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Idcanton");

                    b.ToTable("Canton");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Contacto", b =>
                {
                    b.Property<int>("Idcontacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDContacto");

                    b.Property<string>("Identificador")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("Idusuario")
                        .HasColumnName("IDUsuario");

                    b.Property<int?>("TipoContacto");

                    b.HasKey("Idcontacto");

                    b.HasIndex("Idusuario");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Distrito", b =>
                {
                    b.Property<int>("Iddistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDdistrito");

                    b.Property<int?>("CodDistrito");

                    b.Property<int?>("Idcanton")
                        .HasColumnName("IDCanton");

                    b.Property<int?>("Idprovicia")
                        .HasColumnName("IDProvicia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Iddistrito");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Entidad", b =>
                {
                    b.Property<int>("Identidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDEntidad");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("Estado");

                    b.HasKey("Identidad");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Evento", b =>
                {
                    b.Property<int>("Idevento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDEvento");

                    b.Property<int?>("Calificacion");

                    b.Property<int?>("Estado");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Idexpositor")
                        .HasColumnName("IDExpositor");

                    b.Property<int?>("Idtema")
                        .HasColumnName("IDTema");

                    b.Property<int?>("IdtipoEvento")
                        .HasColumnName("IDTipoEvento");

                    b.Property<int?>("Idubicacion")
                        .HasColumnName("IDUbicacion");

                    b.Property<int?>("Limite");

                    b.HasKey("Idevento");

                    b.HasIndex("Idexpositor");

                    b.HasIndex("Idtema");

                    b.HasIndex("Idubicacion");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.NivelAcademico", b =>
                {
                    b.Property<int>("Idnivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDNivel");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Idnivel");

                    b.ToTable("NivelAcademico");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Provincia", b =>
                {
                    b.Property<int>("Idprovincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDProvincia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Idprovincia");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Reserva", b =>
                {
                    b.Property<int>("Idreserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDReserva");

                    b.Property<int?>("Confirma");

                    b.Property<int?>("Idevento")
                        .HasColumnName("IDEvento");

                    b.Property<int?>("Idusuario")
                        .HasColumnName("IDUsuario");

                    b.Property<int?>("Reserva1")
                        .HasColumnName("Reserva");

                    b.HasKey("Idreserva");

                    b.HasIndex("Idevento");

                    b.HasIndex("Idusuario");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Tema", b =>
                {
                    b.Property<int>("Idtema")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDTema");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("Idtipo")
                        .HasColumnName("IDTipo");

                    b.HasKey("Idtema");

                    b.HasIndex("Idtipo");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.TipoEvento", b =>
                {
                    b.Property<int>("Idevento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDEvento");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int?>("Estado");

                    b.HasKey("Idevento");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.TipoUsuario", b =>
                {
                    b.Property<int>("Idtipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDTipo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int?>("Estado");

                    b.HasKey("Idtipo");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Ubicacion", b =>
                {
                    b.Property<int>("Idubicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDUbicacion");

                    b.Property<int?>("Idcanton")
                        .HasColumnName("IDCanton");

                    b.Property<int?>("Iddistrito")
                        .HasColumnName("IDDistrito");

                    b.Property<int?>("Idevento")
                        .HasColumnName("IDEvento");

                    b.Property<int?>("Idprovincia")
                        .HasColumnName("IDProvincia");

                    b.Property<string>("Lugar")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Idubicacion");

                    b.HasIndex("Idcanton");

                    b.HasIndex("Iddistrito");

                    b.HasIndex("Idevento");

                    b.HasIndex("Idprovincia");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDUsuario");

                    b.Property<string>("Apellido1")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Apellido2")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<int?>("Identidad")
                        .HasColumnName("IDEntidad");

                    b.Property<int?>("Idnivel")
                        .HasColumnName("IDNivel");

                    b.Property<int?>("Idtipo")
                        .HasColumnName("IDTipo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Usuario1")
                        .HasColumnName("Usuario")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Idusuario");

                    b.HasIndex("Identidad");

                    b.HasIndex("Idnivel");

                    b.HasIndex("Idtipo");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Calificacion", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Evento", "IdeventoNavigation")
                        .WithMany("CalificacionNavigation")
                        .HasForeignKey("Idevento")
                        .HasConstraintName("FK_Calificacion_Evento");

                    b.HasOne("ProyectoW1.DBModels.Usuario", "IdusuarioNavigation")
                        .WithMany("Calificacion")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK_Calificacion_Usuario");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Contacto", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Usuario", "IdusuarioNavigation")
                        .WithMany("Contacto")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK_Contacto_Usuario");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Evento", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Usuario", "IdexpositorNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("Idexpositor")
                        .HasConstraintName("FK_Evento_Usuario");

                    b.HasOne("ProyectoW1.DBModels.Tema", "IdtemaNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("Idtema")
                        .HasConstraintName("FK_Evento_Tema");

                    b.HasOne("ProyectoW1.DBModels.Ubicacion", "IdubicacionNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("Idubicacion")
                        .HasConstraintName("FK_Evento_Ubica");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Reserva", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Evento", "IdeventoNavigation")
                        .WithMany("Reserva")
                        .HasForeignKey("Idevento")
                        .HasConstraintName("FK_Reserva_Evento");

                    b.HasOne("ProyectoW1.DBModels.Usuario", "IdusuarioNavigation")
                        .WithMany("Reserva")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK_Reserva_Usuario");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Tema", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.TipoEvento", "IdtipoNavigation")
                        .WithMany("Tema")
                        .HasForeignKey("Idtipo")
                        .HasConstraintName("FK_Tema_TipoEvento");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Ubicacion", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Canton", "IdcantonNavigation")
                        .WithMany("Ubicacion")
                        .HasForeignKey("Idcanton")
                        .HasConstraintName("FK_Ubica_Canton");

                    b.HasOne("ProyectoW1.DBModels.Distrito", "IddistritoNavigation")
                        .WithMany("Ubicacion")
                        .HasForeignKey("Iddistrito")
                        .HasConstraintName("FK_Ubica_Distrito");

                    b.HasOne("ProyectoW1.DBModels.Evento", "IdeventoNavigation")
                        .WithMany("Ubicacion")
                        .HasForeignKey("Idevento")
                        .HasConstraintName("FK_Ubica_Evento");

                    b.HasOne("ProyectoW1.DBModels.Provincia", "IdprovinciaNavigation")
                        .WithMany("Ubicacion")
                        .HasForeignKey("Idprovincia")
                        .HasConstraintName("FK_Ubica_provincia");
                });

            modelBuilder.Entity("ProyectoW1.DBModels.Usuario", b =>
                {
                    b.HasOne("ProyectoW1.DBModels.Entidad", "IdentidadNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("Identidad")
                        .HasConstraintName("FK_Usuario_Entidad");

                    b.HasOne("ProyectoW1.DBModels.NivelAcademico", "IdnivelNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("Idnivel")
                        .HasConstraintName("FK_Usuario_NivelAC");

                    b.HasOne("ProyectoW1.DBModels.TipoUsuario", "IdtipoNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("Idtipo")
                        .HasConstraintName("FK_Usuario_TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
